FROM python:3.12-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install basic Python dependencies for proxy functionality
RUN pip install --no-cache-dir fastapi uvicorn httpx

# Create a simple proxy script
COPY <<EOF /app/proxy.py
import os
import httpx
from fastapi import FastAPI, Request, HTTPException
from fastapi.responses import Response
import uvicorn

app = FastAPI(title="Backend Proxy")

MAIN_SERVER_URL = os.getenv("MAIN_SERVER_URL", "http://localhost:8000")
CLIENT_ID = os.getenv("CLIENT_ID", "1")
PROXY_PORT = int(os.getenv("PROXY_PORT", "8001"))

@app.get("/health")
async def health():
    return {"status": "healthy", "client_id": CLIENT_ID, "main_server": MAIN_SERVER_URL}

@app.api_route("/{path:path}", methods=["GET", "POST", "PUT", "DELETE", "PATCH"])
async def proxy(request: Request, path: str):
    """Proxy all requests to the main server"""
    url = f"{MAIN_SERVER_URL}/{path}"
    
    # Get request data
    headers = dict(request.headers)
    # Remove host header to avoid conflicts
    headers.pop("host", None)
    
    try:
        async with httpx.AsyncClient(timeout=30.0) as client:
            if request.method == "GET":
                response = await client.get(
                    url, 
                    params=request.query_params,
                    headers=headers
                )
            else:
                body = await request.body()
                response = await client.request(
                    request.method,
                    url,
                    content=body,
                    params=request.query_params,
                    headers=headers
                )
        
        return Response(
            content=response.content,
            status_code=response.status_code,
            headers=dict(response.headers)
        )
    
    except httpx.RequestError as e:
        raise HTTPException(status_code=502, detail=f"Proxy error: {str(e)}")

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=PROXY_PORT)
EOF

# Set environment variables
ENV PYTHONUNBUFFERED=1

# Expose port
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Run the proxy
CMD ["python", "proxy.py"]
